<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"     
xmlns="http://java.sun.com/xml/ns/javaee"     
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>trader-server</display-name>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.trader-server.root</param-value>
	</context-param>
	<!-- Log4j配置-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>
	
	<!-- 
	=========================================================
		        用来定位Spring XML文件的上下文配置 
	=========================================================
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/classes/spring/applicationContext*.xml
		</param-value>
	</context-param>
	
	
	<!-- 
	========================================================
		      http session 过期时间 单位(分钟)
	========================================================
	-->
    <session-config>   
       <session-timeout>30</session-timeout>   
    </session-config>
    
    
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	<!-- 
	=========================================================
		Listener contextConfigLocation 
		Web容器会自动加载/WEB-INF/applicationContext.xml初始化
	=========================================================
	-->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<!-- 初始化数据用的监听器 -->
	  <listener>
		<listener-class>
			com.trader.platform.tomcat.TraderInitializeListener
		</listener-class>
	</listener>
	<!-- SpringIntrospector ,防止内存泄露 -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>
	
	
	<!-- 编码过滤器 -->
	<filter>
	    <filter-name>CharacterEncodingFilter</filter-name>
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
	        <param-name>encoding</param-name>
	        <param-value>UTF-8</param-value>
	    </init-param>
	    <init-param>
	        <param-name>forceEncoding</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>CharacterEncodingFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--
	======================================================== 
		            pushlet demo servlet
	======================================================== 
	-->
	<servlet>
		<servlet-name>pushlet_demo</servlet-name>
		<servlet-class>nl.justobjects.pushlet.servlet.Pushlet</servlet-class> 
		<load-on-startup>1</load-on-startup> 
	</servlet>
	<servlet-mapping>
		<servlet-name>pushlet_demo</servlet-name>
		<url-pattern>/pushlet.demo</url-pattern>
	</servlet-mapping>
	<!--
	======================================================== 
		            for spring mvc
	======================================================== 
	<servlet>  
        <servlet-name>spring-mvc</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <init-param>  
	        <param-name>contextConfigLocation</param-name>  
	        <param-value>classpath*:/applicationContext-spring-mvc.xml</param-value>  
	    </init-param>  
        <load-on-startup>2</load-on-startup>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>spring-mvc</servlet-name>  
        <url-pattern>/</url-pattern>  
    </servlet-mapping> 
	-->	
    
</web-app>